(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{412:function(s,e,a){"use strict";a.r(e);var t=a(23),n=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"子查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子查询"}},[s._v("#")]),s._v(" 子查询")]),s._v(" "),a("p",[a("strong",[s._v("子査询")]),s._v(" 就是能够将一些具有先后顺序的査询组装到一个查询语句中,从而节省操作的过程,降低复杂程度")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("select from t_40 where (gender, age) = (select gender, age from t_42 where name = '弥勒');\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("查询一个班里面年龄最大的人")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#尝试直接解决\nselect any_value(name), max(age) as m_age, class_name from t_42 group by class_name order by m_age desc;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("分组统计中 any_value取的是分组后的第一条记录数据(犬夜叉),而我们要的是最大")]),s._v(" "),a("p",[s._v("解决方案:要是在分组之前将所有班级里的茡生本身是降序排序,那么分组的第一条数据就是满足条件的数据。但\n是问题是: order by必须出现在 group by之后,如何解决?")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# order by必须在 group by之前解决:就要想办法让 order by在 group by之前而且不在同一条 select指令中(同一条无解)\n#必须使用子査询解决在不用SQL中的问题,而子查询的结果应该是全部记录信息,所以应该是表子查询,而且是数据源\nselect any_value(name), max (age), class_name from \n(select name, age, class_name from t_42 order by age desc) as t \ngroup by class_name;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("依然无效:原因是 MYSQL以后若要子査询中的 order by生效,需要像联合査询那样,让子査询带上 limit")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("select any_value(name), max(age), class_name from\n(select name, age, class_name from t_42 order by age desc limit 99999) as t\ngroup by class_name;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"exists-子查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exists-子查询"}},[s._v("#")]),s._v(" exists 子查询")]),s._v(" "),a("p",[s._v("exists子査询通常用来解决那种不需要数据但是需要去表中确认关系的査询问题")]),s._v(" "),a("p",[s._v("在 exists子查询中尽量少的选择字段(不建议使用*),因为都是无价值的")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#获取的数据是班级表t46\n#班级是否有学生需要在t_45中确认,并不需要t_45提供任何数据显示\nselect from t_46 c where exists (select c_id from t_45 where c.cid=c_id);\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"比较方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较方式"}},[s._v("#")]),s._v(" 比较方式")]),s._v(" "),a("p",[a("strong",[s._v("all")]),s._v("() : 所有都满足")]),s._v(" "),a("p",[a("strong",[s._v("any")]),s._v("() : 满足任意一个")]),s._v(" "),a("p",[a("strong",[s._v("some")]),s._v("() : 满足某一个")]),s._v(" "),a("p",[a("strong",[s._v("in")]),s._v("() : 存在")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#解决方案1:使用in列子查询\nselect * from t_40 where age in (select distinct age from t_42)\n#解决方案2:使用 exists子查询\nselect * from t_40 tl where exists (select id from t_42 where tl.age age);\n\n#解决方案3:使用any或者some匹配(列子查询)\nselect *  from t_40 where age = some(select age from t_42);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])])}),[],!1,null,null,null);e.default=n.exports}}]);